<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>sg.studium</groupId>
    <artifactId>neurals</artifactId>
    <version>0.8.0-SNAPSHOT</version>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>DL4J training and models for tabular data, simplified and ready to use in enterprise applications.
    </description>
    <url>https://github.com/Studium-SG/neurals</url>

    <licenses>
        <license>
            <name>GNU General Public License, Version 3</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>manual</distribution>
            <comments>A free, copyleft license for software and other kinds of works</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Gabor Nagy</name>
            <email>gabor.nagy@studium.sg</email>
            <organization>Studium Pte Ltd</organization>
            <organizationUrl>https://studium.sg</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/Studium-SG/neurals.git</connection>
        <developerConnection>scm:git:ssh://github.com:Studium-SG/neurals.git</developerConnection>
        <url>https://github.com/Studium-SG/neurals</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <deeplearning4j.version>0.8.0</deeplearning4j.version>
        <scala.binary.version>2.11</scala.binary.version>
        <datavec.spark.version>0.8.0_spark_2</datavec.spark.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <kotlin.version>1.1.2-4</kotlin.version>
        <jackson.version>2.8.8</jackson.version>
        <dokka.version>0.9.14</dokka.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.18</version>
        </dependency>

        <!-- exclude with provided, have only one -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.18</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.16</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jre8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-core</artifactId>
            <version>${deeplearning4j.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--&lt;!&ndash; ASL 2.0&ndash;&gt;-->
        <!--<groupId>org.nd4j</groupId>-->
        <!--<artifactId>nd4j-cuda-8.0</artifactId>-->
        <!--<version>${deeplearning4j.version}</version>-->
        <!--</dependency>-->
        <dependency>
            <!-- ASL 2.0-->
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-native-platform</artifactId>
            <version>${deeplearning4j.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.deeplearning4j</groupId>-->
        <!--<artifactId>deeplearning4j-ui_2.11</artifactId>-->
        <!--<version>${deeplearning4j.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.datavec</groupId>
            <artifactId>datavec-api</artifactId>
            <version>${deeplearning4j.version}</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.datavec</groupId>-->
        <!--<artifactId>datavec-spark_${scala.binary.version}</artifactId>-->
        <!--<version>${datavec.spark.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>com.univocity</groupId>
            <artifactId>univocity-parsers</artifactId>
            <version>2.4.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.14</version>
        </dependency>

        <dependency>
            <groupId>org.tukaani</groupId>
            <artifactId>xz</artifactId>
            <version>1.6</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <!-- to override jackson-module-kotlin's dependency -->
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

    </dependencies>

    <pluginRepositories>
        <pluginRepository>
            <!-- needed for dokka -->
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- this is needed for javadoc generation -->
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <version>${dokka.version}</version>
                <executions>
                    <execution>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>dokka</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>